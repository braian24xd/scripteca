{"ast":null,"code":"import _objectSpread from\"C:/Users/braya/OneDrive/Escritorio/scripteca/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import axios from'axios';import{useState,useEffect}from'react';import{Link}from'react-router-dom';import'../css/account.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Account=()=>{const[user,setUser]=useState({name:'',lastName:'',email:'',phone:'',dateOfBirth:''});const[passwords,setPasswords]=useState({currentPass:'',newPass:'',confirmNewPass:''});const[message,setMessage]=useState('');useEffect(()=>{const fetchUserData=async()=>{try{const token=localStorage.getItem('token');const response=await axios.get('http://localhost:5000/api/users/me',{headers:{Authorization:\"Bearer \".concat(token)}});const userData=response.data;if(userData.dateOfBirth){userData.dateOfBirth=new Date(userData.dateOfBirth).toISOString().split('T')[0];}setUser(response.data);}catch(error){console.error('Error fetching user data:',error);}};fetchUserData();},[]);const handlePasswordChange=e=>{const{name,value}=e.target;setPasswords(prev=>_objectSpread(_objectSpread({},prev),{},{[name]:value}));};const handlePasswordSubmit=async e=>{e.preventDefault();if(passwords.newPass!==passwords.confirmNewPass){setMessage('Las contraseñas nuevas no coinciden.');return;}try{const token=localStorage.getItem('token');await axios.put('http://localhost:5000/api/users/change-password',{currentPassword:passwords.currentPass,newPassword:passwords.newPass},{headers:{Authorization:\"Bearer \".concat(token)}});setMessage('Contraseña actualizada correctamente.');setPasswords({currentPass:'',newPass:'',confirmNewPass:''});}catch(error){var _error$response,_error$response$data;console.error('Error updating password:',error);setMessage(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Hubo un error al actualizar la contraseña.');}};return/*#__PURE__*/_jsxs(\"section\",{className:\"account\",children:[/*#__PURE__*/_jsx(Link,{to:\"/recordings/\",children:\"Regresar\"}),/*#__PURE__*/_jsxs(\"h1\",{children:[\"Cuenta: \",user.name,\" \",user.lastName]}),/*#__PURE__*/_jsxs(\"form\",{className:\"account__info frame\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Informaci\\xF3n personal\"}),/*#__PURE__*/_jsx(\"p\",{className:\"info-text\",children:\"Aqu\\xED se mostrar\\xE1 su informaci\\xF3n personal. Si necesita alguna correcci\\xF3n p\\xF3ngase en contacto con el centro de ayuda\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:user.name||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Apellidos\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"lastName\",value:user.lastName||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Correo Electr\\xF3nico\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:user.email||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Tel\\xE9fono\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"phone\",value:user.phone||'',readOnly:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Fecha de Nacimiento\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"birthDate\",value:user.dateOfBirth||'',readOnly:true})]})]})]});};export default Account;","map":{"version":3,"names":["axios","useState","useEffect","Link","jsx","_jsx","jsxs","_jsxs","Account","user","setUser","name","lastName","email","phone","dateOfBirth","passwords","setPasswords","currentPass","newPass","confirmNewPass","message","setMessage","fetchUserData","token","localStorage","getItem","response","get","headers","Authorization","concat","userData","data","Date","toISOString","split","error","console","handlePasswordChange","e","value","target","prev","_objectSpread","handlePasswordSubmit","preventDefault","put","currentPassword","newPassword","_error$response","_error$response$data","className","children","to","type","readOnly"],"sources":["C:/Users/braya/OneDrive/Escritorio/scripteca/frontend/src/pages/Account.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../css/account.css';\r\n\r\nconst Account = () => {\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    dateOfBirth: '',\r\n  });\r\n\r\n  const [passwords, setPasswords] = useState({\r\n    currentPass: '',\r\n    newPass: '',\r\n    confirmNewPass: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5000/api/users/me', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const userData = response.data;\r\n\r\n        if (userData.dateOfBirth) {\r\n          userData.dateOfBirth = new Date(userData.dateOfBirth)\r\n            .toISOString()\r\n            .split('T')[0];\r\n        }\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching user data:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPasswords((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handlePasswordSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (passwords.newPass !== passwords.confirmNewPass) {\r\n      setMessage('Las contraseñas nuevas no coinciden.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.put(\r\n        'http://localhost:5000/api/users/change-password',\r\n        {\r\n          currentPassword: passwords.currentPass,\r\n          newPassword: passwords.newPass,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        }\r\n      );\r\n\r\n      setMessage('Contraseña actualizada correctamente.');\r\n      setPasswords({\r\n        currentPass: '',\r\n        newPass: '',\r\n        confirmNewPass: '',\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating password:', error);\r\n      setMessage(\r\n        error.response?.data?.message || 'Hubo un error al actualizar la contraseña.'\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className='account'>\r\n      <Link to=\"/recordings/\">Regresar</Link>\r\n      <h1>Cuenta: {user.name} {user.lastName}</h1>\r\n      <form className='account__info frame'>\r\n        <h2>Información personal</h2>\r\n        <p className='info-text'>Aquí se mostrará su información personal. Si necesita alguna corrección póngase en contacto con el centro de ayuda</p>\r\n        <div className='input-group'>\r\n          <label>Nombre</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={user.name || ''}\r\n            readOnly\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Apellidos</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            value={user.lastName || ''}\r\n            readOnly\r\n          />\r\n        </div>\r\n        <div className='input-group'>\r\n          <label>Correo Electrónico</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={user.email || ''}\r\n            readOnly\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Teléfono</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={user.phone || ''}\r\n            readOnly\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Fecha de Nacimiento</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"birthDate\"\r\n            value={user.dateOfBirth || ''}\r\n            readOnly\r\n          />\r\n        </div>\r\n      </form>\r\n      {/* <form className='account__resetPass frame' onSubmit={handlePasswordSubmit}>\r\n        <h2>Cambiar contraseña</h2>\r\n        <p className='info-text'>Se recomienda cambiar la contraseña que recibió inicialmente por una personalizada</p>\r\n        <label htmlFor=\"currentPass\">Contraseña actual</label>\r\n        <input\r\n          type=\"password\"\r\n          name=\"currentPass\"\r\n          id=\"currentPass\"\r\n          value={passwords.currentPass}\r\n          onChange={handlePasswordChange}\r\n        />\r\n        <div className='double-input'>\r\n          <div className='input-group'>\r\n            <label htmlFor=\"newPass\">Nueva contraseña</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"newPass\"\r\n              id=\"newPass\"\r\n              value={passwords.newPass}\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </div>\r\n          <div className='input-group'>\r\n            <label htmlFor=\"confirmNewPass\">Confirmar contraseña nueva</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"confirmNewPass\"\r\n              id=\"confirmNewPass\"\r\n              value={passwords.confirmNewPass}\r\n              onChange={handlePasswordChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\">Guardar</button>\r\n        {message && <p className=\"message\">{message}</p>}\r\n      </form> */}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Account;"],"mappings":"0IAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,CAC/BU,IAAI,CAAE,EAAE,CACRC,QAAQ,CAAE,EAAE,CACZC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EAAE,CACTC,WAAW,CAAE,EACf,CAAC,CAAC,CAEF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,CACzCiB,WAAW,CAAE,EAAE,CACfC,OAAO,CAAE,EAAE,CACXC,cAAc,CAAE,EAClB,CAAC,CAAC,CAEF,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAqB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA3B,KAAK,CAAC4B,GAAG,CAAC,oCAAoC,CAAE,CACrEC,OAAO,CAAE,CAAEC,aAAa,WAAAC,MAAA,CAAYP,KAAK,CAAG,CAC9C,CAAC,CAAC,CAEF,KAAM,CAAAQ,QAAQ,CAAGL,QAAQ,CAACM,IAAI,CAE9B,GAAID,QAAQ,CAACjB,WAAW,CAAE,CACxBiB,QAAQ,CAACjB,WAAW,CAAG,GAAI,CAAAmB,IAAI,CAACF,QAAQ,CAACjB,WAAW,CAAC,CAClDoB,WAAW,CAAC,CAAC,CACbC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClB,CACA1B,OAAO,CAACiB,QAAQ,CAACM,IAAI,CAAC,CACxB,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAEDd,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAgB,oBAAoB,CAAIC,CAAC,EAAK,CAClC,KAAM,CAAE7B,IAAI,CAAE8B,KAAM,CAAC,CAAGD,CAAC,CAACE,MAAM,CAChCzB,YAAY,CAAE0B,IAAI,EAAAC,aAAA,CAAAA,aAAA,IACbD,IAAI,MACP,CAAChC,IAAI,EAAG8B,KAAK,EACb,CAAC,CACL,CAAC,CAED,KAAM,CAAAI,oBAAoB,CAAG,KAAO,CAAAL,CAAC,EAAK,CACxCA,CAAC,CAACM,cAAc,CAAC,CAAC,CAElB,GAAI9B,SAAS,CAACG,OAAO,GAAKH,SAAS,CAACI,cAAc,CAAE,CAClDE,UAAU,CAAC,sCAAsC,CAAC,CAClD,OACF,CAEA,GAAI,CACF,KAAM,CAAAE,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,KAAM,CAAA1B,KAAK,CAAC+C,GAAG,CACb,iDAAiD,CACjD,CACEC,eAAe,CAAEhC,SAAS,CAACE,WAAW,CACtC+B,WAAW,CAAEjC,SAAS,CAACG,OACzB,CAAC,CACD,CACEU,OAAO,CAAE,CAAEC,aAAa,WAAAC,MAAA,CAAYP,KAAK,CAAG,CAC9C,CACF,CAAC,CAEDF,UAAU,CAAC,uCAAuC,CAAC,CACnDL,YAAY,CAAC,CACXC,WAAW,CAAE,EAAE,CACfC,OAAO,CAAE,EAAE,CACXC,cAAc,CAAE,EAClB,CAAC,CAAC,CACJ,CAAE,MAAOiB,KAAK,CAAE,KAAAa,eAAA,CAAAC,oBAAA,CACdb,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDf,UAAU,CACR,EAAA4B,eAAA,CAAAb,KAAK,CAACV,QAAQ,UAAAuB,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBjB,IAAI,UAAAkB,oBAAA,iBAApBA,oBAAA,CAAsB9B,OAAO,GAAI,4CACnC,CAAC,CACH,CACF,CAAC,CAED,mBACEd,KAAA,YAAS6C,SAAS,CAAC,SAAS,CAAAC,QAAA,eAC1BhD,IAAA,CAACF,IAAI,EAACmD,EAAE,CAAC,cAAc,CAAAD,QAAA,CAAC,UAAQ,CAAM,CAAC,cACvC9C,KAAA,OAAA8C,QAAA,EAAI,UAAQ,CAAC5C,IAAI,CAACE,IAAI,CAAC,GAAC,CAACF,IAAI,CAACG,QAAQ,EAAK,CAAC,cAC5CL,KAAA,SAAM6C,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eACnChD,IAAA,OAAAgD,QAAA,CAAI,yBAAoB,CAAI,CAAC,cAC7BhD,IAAA,MAAG+C,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,mIAAkH,CAAG,CAAC,cAC/I9C,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhD,IAAA,UAAAgD,QAAA,CAAO,QAAM,CAAO,CAAC,cACrBhD,IAAA,UACEkD,IAAI,CAAC,MAAM,CACX5C,IAAI,CAAC,MAAM,CACX8B,KAAK,CAAEhC,IAAI,CAACE,IAAI,EAAI,EAAG,CACvB6C,QAAQ,MACT,CAAC,EACC,CAAC,cACNjD,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhD,IAAA,UAAAgD,QAAA,CAAO,WAAS,CAAO,CAAC,cACxBhD,IAAA,UACEkD,IAAI,CAAC,MAAM,CACX5C,IAAI,CAAC,UAAU,CACf8B,KAAK,CAAEhC,IAAI,CAACG,QAAQ,EAAI,EAAG,CAC3B4C,QAAQ,MACT,CAAC,EACC,CAAC,cACNjD,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhD,IAAA,UAAAgD,QAAA,CAAO,uBAAkB,CAAO,CAAC,cACjChD,IAAA,UACEkD,IAAI,CAAC,OAAO,CACZ5C,IAAI,CAAC,OAAO,CACZ8B,KAAK,CAAEhC,IAAI,CAACI,KAAK,EAAI,EAAG,CACxB2C,QAAQ,MACT,CAAC,EACC,CAAC,cACNjD,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhD,IAAA,UAAAgD,QAAA,CAAO,aAAQ,CAAO,CAAC,cACvBhD,IAAA,UACEkD,IAAI,CAAC,MAAM,CACX5C,IAAI,CAAC,OAAO,CACZ8B,KAAK,CAAEhC,IAAI,CAACK,KAAK,EAAI,EAAG,CACxB0C,QAAQ,MACT,CAAC,EACC,CAAC,cACNjD,KAAA,QAAK6C,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BhD,IAAA,UAAAgD,QAAA,CAAO,qBAAmB,CAAO,CAAC,cAClChD,IAAA,UACEkD,IAAI,CAAC,MAAM,CACX5C,IAAI,CAAC,WAAW,CAChB8B,KAAK,CAAEhC,IAAI,CAACM,WAAW,EAAI,EAAG,CAC9ByC,QAAQ,MACT,CAAC,EACC,CAAC,EACF,CAAC,EAqCA,CAAC,CAEd,CAAC,CAED,cAAe,CAAAhD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}